services:
    rdb:
        image: mysql:9.4.0
        container_name: mysql-container

        networks:
            - net
        ports:
            - ${MYSQL_PORT}:3306

        env_file:
            - project/server/.env
        environment:
            - LC_ALL=C.UTF-8
        volumes:
            - rdb-data:/var/lib/mysql
            - ./data:/docker-entrypoint-initdb.d

        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 10s

    redis:
        image: redis:8.2.1
        container_name: redis-container

        networks:
            - net
        ports:
            - ${REDIS_PORT}:6379

        volumes:
            - redis-data:/data
        env_file:
            - project/server/.env

        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 10s
            retries: 5
            start_period: 10s

    server:
        image: ghibli-films-server:${SERVER_VERSION}
        container_name: server
        build:
            context: .
            dockerfile: Dockerfile.server

        networks:
            - net
        depends_on:
            rdb:
                condition: service_healthy
            redis:
                condition: service_healthy
        ports:
            - ${SERVER_PORT}:4000

        env_file:
            - project/server/.env
        environment:
            - MYSQL_HOST=rdb
            - REDIS_HOST=redis
            - DOMAIN=${WEB_DOMAIN}:${WEB_PORT}

        healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:4000/"]
            interval: 10s
            timeout: 5s
            retries: 5

    web:
        image: ghibli-films-web:${WEB_VERSION}
        container_name: web
        build:
            context: .
            dockerfile: Dockerfile.web

        networks:
            - net
        depends_on:
            server:
                condition: service_healthy
        ports:
            - ${WEB_PORT}:80

        env_file:
            - project/web/.env
        environment:
            - REACT_APP_API_HOST=${SERVER_DOMAIN}:${SERVER_PORT}
networks:
    net:
        name: net
        driver: bridge

volumes:
    rdb-data:
        driver: local
    redis-data:
        driver: local
